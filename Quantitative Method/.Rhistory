#   filter(educ == 12) %>%
#     summarise(avgwage = mean(wage))
wage1 %>%
filter(educ >= 12 & educ <= 16)
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(12.9, 15.1))) %>%
summarise(avgwage = mean(wage))
# wage1 %>%
#   filter(educ == 12) %>%
#     summarise(avgwage = mean(wage))
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(12.9, 15.1, 15.9))) %>%
summarise(avgwage = mean(wage))
# wage1 %>%
#   filter(educ == 12) %>%
#     summarise(avgwage = mean(wage))
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(12, 13, 15, 16))) %>%
summarise(avgwage = mean(wage))
# wage1 %>%
#   filter(educ == 12) %>%
#     summarise(avgwage = mean(wage))
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage))
# wage1 %>%
#   filter(educ == 12) %>%
#     summarise(avgwage = mean(wage))
wage1 %>%
filter(educ == 12) %>%
summarise(avgwage = mean(wage))
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage))
wage1 %>%
filter(educ == 16) %>%
summarise(avgwage = mean(wage))
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage)) -> wageforUniTreatment
wageforUniTreatment
wageforUniTreatment %>% rename(cut(educ, c(11, 12, 15, 16)), EducaInterval)
wageforUniTreatment %>% rename(cut(educ, c(11, 12, 15, 16))=EducaInterval)
wageforUniTreatment %>% rename("cut(educ, c(11, 12, 15, 16))"="EducaInterval")
wageforUniTreatment %>% rename(wageforUniTreatment$`cut(educ, c(11, 12, 15, 16))`=EducaInterval)
wageforUniTreatment %>% rename(wageforUniTreatment$`cut(educ, c(11, 12, 15, 16))` = EducaInterval)
wageforUniTreatment %>% rename(wageforUniTreatment$`cut(educ, c(11, 12, 15, 16))` = `EducaInterval`)
wageforUniTreatment %>% rename(wageforUniTreatment$`cut(educ, c(11, 12, 15, 16))` = `Interval`)
wageforUniTreatment %>% rename(wageforUniTreatment$`cut(educ, c(11, 12, 15, 16))` = "Interval")
wageforUniTreatment %>% rename(wageforUniTreatment$`cut(educ, c(11, 12, 15, 16))`="Interval")
names(wageforUniTreatment)[1] <- "EducInterval"
wageforUniTreatment
rownames(wageforUniTreatment)[1:3] <- c(12, 13-15, 16)
rownames(wageforUniTreatment)[1:3] <- c("12", "13-15", "16")
wageforUniTreatment
names(wageforUniTreatment)[1] <- "EducInterval"
rownames(wageforUniTreatment) <- c("12", "13-15", "16")
wageforUniTreatment
wageforUniTreatment
rownames(wageforUniTreatment) <- c("12", "13-15", "16")
rownames(wageforUniTreatment)[1] <- 12
wageforUniTreatment
rownames(wageforUniTreatment)[1] <- "12"
wageforUniTreatment
wageforUniTreatment[1:3, 1] <- c("12","13-15","16")
wageforUniTreatment
wageforUniTreatment[1:3, 1] <- c(12,13-15,16)
wageforUniTreatment
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage)) -> wageforUniTreatment
# 不曉得有沒有更好的cut的表達方式？
# wage1 %>%
#   filter(educ == 16) %>%
#     summarise(avgwage = mean(wage))
names(wageforUniTreatment)[1] <- "EducInterval"
wageforUniTreatment
wageforUniTreatment
knitr::opts_chunk$set(echo = TRUE)
journals %>%
select_if(is_numeric)
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
Journals %>% mutate(citeprice=price/citations) -> journals
journals %>%
select_if(is_numeric)
journals %>%
select_if(is_numeric)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
cor_subs <- function(x){
cor(x,journals$subs)
}
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_subs)
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
Journals %>% mutate(citeprice=price/citations) -> journals
#journals
summary(journals) #用來看資料特徵
#price，圖書館訂閱某期刊的價格
#citations，某期刊被引用的次數
#citeprice，期刊引用單價
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# journals %>%
#   select(citeprice,subs) %>%
#   pairs.panels()
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
journals %>%
dplyr::select(citeprice,subs) %>%
dplyr::mutate_all(log) %>% #取log使他較接近常態分配，OLS迴歸斜率也較清楚。
pairs.panels()
# 判斷變數是否為數值類別，先建立函數功能。
is_numeric<-function(x) all(is.numeric(x))
# 計算數數與citeprice的相關係數，先建立函數功能，那要另外建立，是因為有一個citeprice這個變數，我想要先訂下來。
cor_citeprice<-function(x) cor(x,journals$citeprice)
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_citeprice) %>% #summarise是接近敘述統計量的意思
kable() #kable讓印的表變得比較好看
library("AER")
library("ggplot2")
library("dplyr")
library("knitr")
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
Journals %>% mutate(citeprice=price/citations) -> journals
#journals
summary(journals) #用來看資料特徵
#price，圖書館訂閱某期刊的價格
#citations，某期刊被引用的次數
#citeprice，期刊引用單價
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# journals %>%
#   select(citeprice,subs) %>%
#   pairs.panels()
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
journals %>%
dplyr::select(citeprice,subs) %>%
dplyr::mutate_all(log) %>% #取log使他較接近常態分配，OLS迴歸斜率也較清楚。
pairs.panels()
# 判斷變數是否為數值類別，先建立函數功能。
is_numeric<-function(x) all(is.numeric(x))
# 計算數數與citeprice的相關係數，先建立函數功能，那要另外建立，是因為有一個citeprice這個變數，我想要先訂下來。
cor_citeprice<-function(x) cor(x,journals$citeprice)
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_citeprice) %>% #summarise是接近敘述統計量的意思
kable() #kable讓印的表變得比較好看
#回去寫：佐證foundingyear和subs的立足點不同的佐證。correlation
library(dplyr)
cor_subs <- function(x){
cor(x,journals$subs)
}
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_subs)
#cor(foundingyear, subs) = -0.4073721
#cor(foundingyear, citeprice) = 0.3102098
#cor(citeprice, subs) = -0.4195314
journals %>%
select_if(is_numeric)
knitr::opts_chunk$set(echo = TRUE)
journals %>%
lm(log(subs)~log(citeprice),data=.)
library(dplyr)
journals %>%
lm(log(subs)~log(citeprice),data=.)
knitr::opts_chunk$set(echo = TRUE)
journals %>%
dplyr::select(citeprice,subs) %>%
dplyr::mutate_all(log) %>% #取log使他較接近常態分配，OLS迴歸斜率也較清楚。
pairs.panels()
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
Journals %>% mutate(citeprice=price/citations) -> journals
#journals
summary(journals) #用來看資料特徵
#price，圖書館訂閱某期刊的價格
#citations，某期刊被引用的次數
#citeprice，期刊引用單價
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# journals %>%
#   select(citeprice,subs) %>%
#   pairs.panels()
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
journals %>%
dplyr::select(citeprice,subs) %>%
dplyr::mutate_all(log) %>% #取log使他較接近常態分配，OLS迴歸斜率也較清楚。
pairs.panels()
# 判斷變數是否為數值類別，先建立函數功能。
is_numeric<-function(x) all(is.numeric(x))
# 計算數數與citeprice的相關係數，先建立函數功能，那要另外建立，是因為有一個citeprice這個變數，我想要先訂下來。
cor_citeprice<-function(x) cor(x,journals$citeprice)
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_citeprice) %>% #summarise是接近敘述統計量的意思
kable() #kable讓印的表變得比較好看
journals %>%
dplyr::select(citeprice,subs) %>%
dplyr::mutate_all(log) %>% #取log使他較接近常態分配，OLS迴歸斜率也較清楚。
pairs.panels()
journals %>%
lm(log(subs)~log(citeprice),data=.)
knitr::opts_chunk$set(echo = TRUE)
journals %>%
lm(log(subs)~log(citeprice),data=.)
knitr::opts_chunk$set(echo = TRUE)
journals %>%
lm(log(subs)~log(citeprice)+foundingyear,data=.)
knitr::opts_chunk$set(echo = TRUE)
#在R裡面，
knitr::opts_chunk$set(echo = TRUE)
journals %>%
lm(log(subs)~log(citeprice),data=.) -> model_1
journals %>%
lm(log(subs)~log(citeprice)+foundingyear,data=.) -> model_2
knitr::opts_chunk$set(echo = TRUE)
model_1
model_2
library(sandwich)
library(lmtest)
library(stargazer)
knitr::opts_chunk$set(echo = TRUE)
stargazer(model_1, model_2,
se=list(model_1_coeftest[,"Std. Error"], model_2_coeftest[,2]),
type="html",
align=TRUE)
#使用vcovHC函數來計算HC1型的異質變異（即橫斷面資料下的線性迴歸模型）
coeftest(model_1, vcov. = vcovHC, type="HC1") -> model_1_coeftest
coeftest(model_2, vcov. = vcovHC, type="HC1") -> model_2_coeftest
stargazer(model_1, model_2,
se=list(model_1_coeftest[,"Std. Error"], model_2_coeftest[,2]),
type="html",
align=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(sandwich) #for standard error(就是standard error公式的一個形態，兩端相同，只有中間不同。)
library(lmtest)
library(stargazer)
#使用vcovHC函數來計算HC1型的異質變異
#（即橫斷面資料且符合隨機抽樣下，的線性迴歸模型）
coeftest(model_1, vcov. = vcovHC, type="HC1") -> model_1_coeftest
coeftest(model_2, vcov. = vcovHC, type="HC1") -> model_2_coeftest
# vcov. = vcovHC, type="HC1" 是固定的，就是因為他是橫斷面且符合隨機抽樣的類型。他的非對角線都是0，
stargazer(model_1, model_2,
se=list(model_1_coeftest[,"Std. Error"], model_2_coeftest[,2]),
type="text",
align=TRUE)
#se 指定的standard error算法。se=list(...)不要動。
knitr::opts_chunk$set(echo = TRUE)
library(sandwich) #for standard error(就是standard error公式的一個形態，兩端相同，只有中間不同。)
library(lmtest)
library(stargazer)
#使用vcovHC函數來計算HC1型的異質變異
#（即橫斷面資料且符合隨機抽樣下，的線性迴歸模型）
coeftest(model_1, vcov. = vcovHC, type="HC1") -> model_1_coeftest
coeftest(model_2, vcov. = vcovHC, type="HC1") -> model_2_coeftest
# vcov. = vcovHC, type="HC1" 是固定的，就是因為他是橫斷面且符合隨機抽樣的類型。他的非對角線都是0，那HC1、HC2是不同的資料型態。遇到就會比較知道。
stargazer(model_1, model_2,
se=list(model_1_coeftest[,"Std. Error"], model_2_coeftest[,2]),
type="text",
align=TRUE)
#se 指定的standard error算法。se=list(...)不要動。
#[,"Std. Error"]和[,2]的寫法是一樣的目的。寫法不同。
#type="text" 也可以改成"html"
#align就是讓他排版就好看而已。
#查coeftest的help
knitr::opts_chunk$set(echo = TRUE)
model_1_coeftest
knitr::opts_chunk$set(echo = TRUE)
model_2_coeftest
wage1 %>% select(educ, wage) %>% psych::pairs.panels()
#你的程式答案
#你的程式答案
#你的程式答案
rm(list=ls())
library(dplyr)
library(psych)
library(haven)
wage1 <- read_dta("http://fmwww.bc.edu/ec-p/data/wooldridge/wage1.dta")
wage1
wage1 %>% select(educ, wage) %>% psych::pairs.panels()
#由目前的圖來看，對wage取log叫好，因為可以使其更接近常態分配。
wage1 %>% select(educ, lwage) %>% psych::pairs.panels()
wage1 %>% select(educ, wage) %>% psych::pairs.panels()
#由目前的圖來看，對wage取log叫好，因為可以使其更接近常態分配。
wage1 %>%
lm(formula = lwage~educ) #這邊因為formula有設定好。那data就會放到第二個參數，剛好是data，也就可以跑了。
#迴歸式：lwage = 0.58377 + 0.08274educ + epislon
wage1$educ
summary(wage1$educ)
wage1 %>% select(nonwhite, lwage) %>% psych::pairs.panels()
wage1 %>% select(female, lwage) %>% psych::pairs.panels()
wage1 %>% select(nonwhite, lwage) %>% psych::pairs.panels()
wage1 %>% select(female, lwage) %>% psych::pairs.panels()
wage1 %>% select(numdep, lwage) %>% psych::pairs.panels()
knitr::opts_chunk$set(echo = TRUE)
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# journals %>%
#   select(citeprice,subs) %>%
#   pairs.panels()
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# journals %>%
#   select(citeprice,subs) %>%
#   pairs.panels()
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
library("AER")
library("ggplot2")
library("dplyr")
library("knitr")
data("Journals")
#str(Journals)
#View(Journals)
Journals
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
Journals %>% mutate(citeprice=price/citations) -> journals
#journals
summary(journals) #用來看資料特徵
#price，圖書館訂閱某期刊的價格
#citations，某期刊被引用的次數
#citeprice，期刊引用單價
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
knitr::opts_chunk$set(echo = TRUE)
class(journals$citeprice, journals$subs)
knitr::opts_chunk$set(echo = TRUE)
class(journals$citeprice)
knitr::opts_chunk$set(echo = TRUE)
class(journals$subs)
knitr::opts_chunk$set(echo = TRUE)
journals$citeprice
knitr::opts_chunk$set(echo = TRUE)
journals %>%
dplyr::select(citeprice,subs)
wage1 %>% select(female, lwage)
wage1 %>% select(numdep, lwage)
wage1 %>% select(educ, wage)
journals %>% lm(lwage~educ+female, data = .)
#你的程式答案
rm(list=ls())
library(dplyr)
library(psych)
library(haven)
wage1 <- read_dta("http://fmwww.bc.edu/ec-p/data/wooldridge/wage1.dta")
wage1
wage1 %>% select(educ, wage) %>% psych::pairs.panels()
#由目前的圖來看，對wage取log叫好，因為可以使其更接近常態分配。
wage1 %>% select(educ, lwage) %>% psych::pairs.panels()
wage1 %>%
lm(formula = lwage~educ) #這邊因為formula有設定好。那data就會放到第二個參數，剛好是data，也就可以跑了。
#迴歸式：lwage = 0.58377 + 0.08274educ + epislon
wage1 %>% select(nonwhite, lwage) %>% psych::pairs.panels() #-0.04
wage1 %>% select(female, lwage) %>% psych::pairs.panels() #-0.37
wage1 %>% select(numdep, lwage) %>% psych::pairs.panels() #-0.10
#類別資料，(0,1) (0,1,2,3,4)這種也可以取log嗎？（或者說取log有意義嗎？
journals %>% lm(lwage~educ+female, data = .)
wage1 %>% lm(lwage~educ+female, data = .)
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage)) -> wageforUniTreatment
# 不曉得有沒有更好的cut的表達方式？
# wage1 %>%
#   filter(educ == 16) %>%
#     summarise(avgwage = mean(wage))
wageforUniTreatment
names(wageforUniTreatment)[1] <- "EducInterval"
wageforUniTreatment
# 目前想要把cell內的值給成（12, 13-15, 16)好像因為他是factor所以有點卡住
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage)) -> wageforUniTreatment
names(wageforUniTreatment)[1] <- "EducInterval"
wageforUniTreatment
# 不曉得有沒有更好的cut的表達方式？
# wage1 %>%
#   filter(educ == 16) %>%
#     summarise(avgwage = mean(wage))
wageforUniTreatment[1:3,1] <- ("12", "13-15", "16")
wageforUniTreatment[1:3,1]
wageforUniTreatment[1:3,1] <- c(12,13,16)
wageforUniTreatment
wage1 %>%
filter(educ >= 12 & educ <= 16) %>%
group_by(cut(educ, c(11, 12, 15, 16))) %>%
summarise(avgwage = mean(wage)) -> wageforUniTreatment
names(wageforUniTreatment)[1] <- "EducInterval"
wageforUniTreatment
# 不曉得有沒有更好的cut的表達方式？
wageforUniTreatment
wage1 %>% educ
wage1 %>% select(educ)
wage1 %>% filter(educ > 12 & educ < 16)
wage1 %>% filter(educ > 12 & educ < 16) %>% select(educ)
# wage1 %>% filter(educ > 12 & educ < 16) %>% select(educ)
#大學休學沒念完的共有113筆樣本。全部有526筆樣本。
wageforUniTreatment
# wage1 %>% filter(educ > 12 & educ < 16) %>% select(educ)
#大學休學沒念完的共有113筆樣本。全部有526筆樣本。
wageforUniTreatment
wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(educ,lwage)
wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(educ,lwage) %>% pairs.panels()
wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(lwage, educ) %>% pairs.panels()
wageforUniTreatment
#wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(lwage, educ) %>% pairs.panels()
#相關係數0.30
#wage1 %>% filter(educ == 12)
#wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(lwage, educ) %>% pairs.panels()
#相關係數0.30
wage1 %>% filter(educ == 12)
#wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(lwage, educ) %>% pairs.panels()
#相關係數0.30
#wage1 %>% filter(educ == 12)
#198筆樣本
wage1 %>% filter(educ == 16)
#wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(lwage, educ) %>% pairs.panels()
#相關係數0.30
#wage1 %>% filter(educ == 12)
#198筆樣本
#wage1 %>% filter(educ == 16)
#68筆樣本
#wage1 %>% filter(educ >= 13 & educ <= 15)
#wage1 %>% filter(educ >= 12 & educ <= 16) %>% select(lwage, educ) %>% pairs.panels()
#相關係數0.30
#wage1 %>% filter(educ == 12)
#198筆樣本
#wage1 %>% filter(educ == 16)
#68筆樣本
wage1 %>% filter(educ >= 13 & educ <= 15)
wage1 %>% filter(educ == 12 & educ == 16) %>% select(lwage, educ) %>% pairs.panels()
wage1
wage1 %>% select(educ, wage) %>% psych::pairs.panels()
#由目前的圖來看，對wage取log叫好，因為可以使其更接近常態分配。
wage1 %>% select(educ, lwage) %>% psych::pairs.panels()
wage1 %>%
lm(lwage~educ) #這邊因為formula有設定好。那data就會放到第二個參數，剛好是data，也就可以跑了。
wage1 %>%
lm(formula = lwage~educ) #這邊因為formula有設定好。那data就會放到第二個參數，剛好是data，也就可以跑了。
#迴歸式：lwage = 0.58377 + 0.08274educ + epislon
wage1 %>% lm(lwage~educ+female, data = .)
