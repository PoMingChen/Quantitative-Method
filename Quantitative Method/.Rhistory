BaseOls <- lm(BaseModel, data = labordata)
BaseModel <- WKS ~ LWAGE + ED + UNION + FEM
BaseOls <- lm(BaseModel, data = labordata)
BaseOls
library(sandwich)
library(lmtest)
library(stargazer)
BaseModel <- WKS ~ LWAGE + ED + UNION + FEM
BaseOls <- lm(BaseModel, data = labordata)
coeftest(BaseOls, vcov. = vcovHC, type = "HC1") -> BaseOls_coeftest
BaseOls_coeftest
tsls_1iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM | LWAGE + ED + UNION + FEM + IND,
data=labordata
)
tsls_1iv
tsls_1iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM | ED + UNION + FEM + IND,
data=labordata
)
tsls_1iv
summary(tsls_1iv, vcov = sandwich, diagnostics = TRUE, df=Inf) -> tsls_1iv_tests
tsls_1iv_tests
tsls_2iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM | ED + UNION + FEM + IND + SMSA,
data=labordata
)
tsls_2iv
tsls_1iv
tsls_2iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM | IND + SMSA ED + UNION + FEM ,
tsls_2iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM |IND + SMSA + ED + UNION + FEM ,
data=labordata
)
tsls_2iv
tsls_2iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM |IND + ED + UNION + FEM + SMSA ,
data=labordata
)
tsls_2iv
tsls_2iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM | ED + UNION + FEM + IND + SMSA ,
data=labordata
)
tsls_2iv
summary(tsls_2iv, vcov = sandwich, diagnostics = TRUE, df = Inf) -> tsls_2iv_tests
tsls_2iv_tests
stargazer(lm1, lm2, tsls_1iv, tsls_2iv)
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text")
summary(tsls_2iv, vcov = sandwich, diagnostics = TRUE, df = Inf) -> tsls_2iv_tests
tsls_2iv_tests
summary(tsls_1iv, vcov = sandwich, diagnostics = TRUE, df=Inf) -> tsls_1iv_tests
tsls_1iv_tests
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue", "", "", "", ""),
c("Q1: Sargan", "", "", "NA", "0.363"),
c("Q2: Weak instruments", "", "", "0.000569", "8.92e-11"),
c("Q3: Wu-Hausman", "", "", "0.598699", "0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV")
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text"
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue", "NA", "NA", "NA", "NA"),
c("Q1: Sargan", "NA", "NA", "NA", "0.363"),
c("Q2: Weak instruments", "NA", "NA", "0.000569", "8.92e-11"),
c("Q3: Wu-Hausman", "NA", "NA", "0.598699", "0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text"),
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text")
# column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"),
# add.lines = list(c("TSLS tests pvalue","","","",""),
#                  c("Q1: Sargan","","", "NA", "0.363"),
#                  c("Q2: Weak instruments","","","0.000569","8.92e-11"),
#                  c("Q3: Wu-Hausman","","","0.598699","0.565")
# ))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV")
# add.lines = list(c("TSLS tests pvalue","","","",""),
#                  c("Q1: Sargan","","", "NA", "0.363"),
#                  c("Q2: Weak instruments","","","0.000569","8.92e-11"),
#                  c("Q3: Wu-Hausman","","","0.598699","0.565")
# ))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "html",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "html",
column.labels = c("OLS", "Multi_OLS", "oneIV", "twoIV"))
stargazer(tsls_1iv, tsls_2iv, type = "text",
column.labels = c("oneIV", "twoIV"))
stargazer(lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("Multi_OLS","oneIV", "twoIV"))
stargazer(lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("MultiOLS","oneIV", "twoIV"))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "html",
column.labels = c("OLS", "MultiOLS", "oneIV", "twoIV"))
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "html",
column.labels = c("OLS", "MultiOLS", "oneIV", "twoIV"))
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
)
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "MultiOLS", "oneIV", "twoIV"))
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
)
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "MultiOLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
)
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "MultiOLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("OLS", "MultiOLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("Simple OLS", "Multi OLS", "oneIV", "twoIV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("Simple OLS", "Multi OLS", "one IV", "two IV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "html",
column.labels = c("Simple OLS", "Multi OLS", "one IV", "two IV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
#plot(labordata$WKS, labordata$LWAGE, xlab = "WKS", ylab = "LWAGE")
plot(labordata$LWAGE, labordata$WKS, xlab = "LWAGE", ylab = "WKS")
library(sandwich)
library(lmtest)
library(stargazer)
lm1 <- labordata %>% lm(formula = WKS ~ LWAGE)
lm2 <- labordata %>% lm(formula = WKS ~ LWAGE + ED + UNION + FEM)
stargazer(lm1, lm2, type = "html")
stargazer(lm1, lm2, type = "html")
stargazer(lm1, lm2, type = "html") -> z
stargazer(lm1, lm2, type = "text")
BaseOls
BaseOls_coeftest
tsls_1iv <- ivreg(
WKS ~ LWAGE + ED + UNION + FEM | ED + UNION + FEM + IND,
data=labordata
)
tsls_1iv
stargazer(lm1, lm2, tsls_1iv, tsls_2iv, type = "html",
column.labels = c("Simple OLS", "Multi OLS", "one IV", "two IV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
BaseModel1 <- WKS ~ LWAGE
BaseModel2 <- WKS ~ LWAGE + ED + UNION + FEM
BaseOls1 <- lm(BaseModel1, data = labordata)
BaseOls2 <- lm(BaseModel2, data = labordata)
coeftest(BaseOls1, vcov. = vcovHC, type = "HC1") -> Simple_Ols_coeftest
coeftest(BaseOls2, vcov. = vcovHC, type = "HC1") -> Multi_Ols_coeftest
BaseModel1 <- WKS ~ LWAGE
BaseModel2 <- WKS ~ LWAGE + ED + UNION + FEM
BaseOls1 <- lm(BaseModel1, data = labordata)
BaseOls2 <- lm(BaseModel2, data = labordata)
coeftest(BaseOls1, vcov. = vcovHC, type = "HC1") -> Simple_Ols_coeftest
coeftest(BaseOls2, vcov. = vcovHC, type = "HC1") -> Multi_Ols_coeftest
Simple_Ols_coeftest
Multi_Ols_coeftest
Multi_Ols_coeftest
stargazer(Simple_Ols_coeftest, Multi_Ols_coeftest, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("Simple OLS", "Multi OLS", "one IV", "two IV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
stargazer(Simple_Ols_coeftest, Multi_Ols_coeftest, tsls_1iv, tsls_2iv, type = "text",
column.labels = c("Simple OLS", "Multi OLS", "one IV", "two IV"),
add.lines = list(c("TSLS tests pvalue","","","",""),
c("Q1: Sargan","","", "NA", "0.363"),
c("Q2: Weak instruments","","","0.000569","8.92e-11"),
c("Q3: Wu-Hausman","","","0.598699","0.565")
))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(ggplot2)
library(dplyr)
library(ggplot2)
data("mpg")
mpg %>% head
canvas<-ggplot(data=mpg,mapping=aes(x=cyl,y=cty))
canvas
library(dplyr)
library(dplyr)
library(ggplot2)
data("mpg")
mpg %>% head
ggplot2(data=economics, aes(x = date, y = unemployment))
library(dplyr)
library(magrittr)
library(ggplot2)
library(dplyr)
library(ggplot2)
data("mpg")
mpg %>% head
canvas<-ggplot(data=mpg,mapping=aes(x=cyl,y=cty))
canvas
ggplot2(data=economics, aes(x = date, y = unemployment))
ggplot2(data=economics, aes(x = date, y = unemployment))
ggplot(data=economics, aes(x = date, y = unemployment))
economics
ggplot(data=economics, aes(x = date, y = unemploy))
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line()
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_jitter()
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_point() + geom_area
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_point() + geom_area()
e2 + geom_point(mapping=aes(cty, hwy),data=mpg)+
geom_smooth()
e2 <- ggplot()
e2 + geom_point(mapping=aes(cty, hwy),data=mpg)
e2 + geom_point(mapping=aes(cty, hwy),data=mpg)+
geom_smooth()
e2 + geom_point(mapping=aes(cty, hwy),data=mpg)+
geom_smooth(method = lm)
e2 + geom_point(mapping=aes(cty, hwy),data=mpg)+
geom_smooth(method = lm)
e2 + geom_point(mapping=aes(cty, hwy),data=mpg)+
geom_smooth(mapping=aes(cty, hwy),data=mpg)
economics
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_point() + geom_area(data=economics, aes(x= 1990:2000))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(aes(x = date, y = unemploy))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(1990-01-01 <=date <= 2000-01-01 )
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(1990-01-01 <=date <= 2000-01-01 ))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(1990-01-01 <= date <= 2000-01-01 ))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= 2000-01-01))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= 2000-01-01 & date >= 1990-01-01))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= 2000-01-01 & date >= 1990-01-01))
library(lubridate)
library(lubridate)
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= 2000-01-01 & date >= 1990-01-01))
library(lubridate)
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= "2000-01-01" & date >= "1990-01-01"))
library(lubridate)
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= 2000-01-01 & date >= 1990-01-01))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= "2000-01-01 & date >= 1990-01-01))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= "2000-01-01" & date >= "1990-01-01"))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_rect(data = economics %>% filter(date <= "2000-01-01" & date >= "1990-01-01"))
economics
ggplot(data=economics, aes(x = date, y = unemploy)) + geom_line() + geom_area(data = economics %>% filter(date <= "2000-01-01" & date >= "1990-01-01"))
#要呈現汽缸數和車種類別。
mpg
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg)+
geom_point(aes(x=cty,y=hwy, shape=class, color=cyl)
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg)+
geom_point(aes(x=cty,y=hwy, shape=class, color=cyl))
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg)+
geom_point(aes(x=cty,y=hwy, shape=class, fill=cyl))
ggplot(mpg)+
geom_point(aes(x=cty,y=hwy, shape=class, fill=cyl)) %>% geom_jitter
ggplot(mpg)+
geom_point(aes(x=cty,y=hwy, shape=class, fill=cyl)) %>% geom_jitter()
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes=(x=cty,y=hwy))+
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes=(x=cty, y=hwy))+
#要呈現汽缸數和車種類別。
mpg
ggplot(data=mpg, aes=(cty, hwy)) +
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes=(cty, hwy)) +
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg)+
geom_point(aes(x=cty,y=hwy,color=class))
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy)) +
geom_jitter()
#要呈現汽缸數和車種類別。
mpg
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy)) +
geom_jitter(shape=class, color=cyl)
#要呈現汽缸數和車種類別。
mpg
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy)) +
geom_jitter(shape=class, color=cyl)
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy)) +
geom_jitter(shape=class)
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy)) +
ggplot(mpg, aes(x=cty,y=hwy))
ggplot(mpg, aes(x=cty,y=hwy)) + geom_jitter
ggplot(mpg, aes(x=cty,y=hwy)) + geom_jitter()
ggplot(mpg, aes(x=cty,y=hwy)) + geom_point(shape = class)
#要呈現汽缸數和車種類別。
mpg
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy)) + geom_point(color = class)
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy, color=class)
ggplot(mpg, aes(x=cty,y=hwy, color=class)) + geom_point()
ggplot(mpg, aes(x=cty,y=hwy, color=class)) + geom_point(size=cyl)
#要呈現汽缸數和車種類別。
mpg
ggplot(mpg, aes(x=cty,y=hwy, color=cyl)) + geom_point(size=cyl)
ggplot(mpg, aes(x=cty,y=hwy, color=cyl)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
knitr::opts_chunk$set(echo = TRUE)
library(sandwich) #for standard error(就是standard error公式的一個形態，兩端相同，只有中間不同。)
library(lmtest)
library(stargazer)
#使用vcovHC函數來計算HC1型的異質變異，這邊在古典假設成立下，variance-covariance matrix的
#（即橫斷面資料且符合隨機抽樣下，的線性迴歸模型）
#coeftest, Inference for Estimated Coefficients，那就是會用到假設檢定的公式。(beta_hat-beta)/se.。自然就需要variance-covariance matrix
coeftest(model_1, vcov. = vcovHC, type="HC1") -> model_1_coeftest
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
library(sandwich) #for standard error(就是standard error公式的一個形態，兩端相同，只有中間不同。)
library(lmtest)
library(stargazer)
#使用vcovHC函數來計算HC1型的異質變異，這邊在古典假設成立下，variance-covariance matrix的
#（即橫斷面資料且符合隨機抽樣下，的線性迴歸模型）
#coeftest, Inference for Estimated Coefficients，那就是會用到假設檢定的公式。(beta_hat-beta)/se.。自然就需要variance-covariance matrix
coeftest(model_1, vcov. = vcovHC, type="HC1") -> model_1_coeftest
model_1
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
data("Journals")
#str(Journals)
#View(Journals)
Journals
data("Journals")
#str(Journals)
#View(Journals)
Journals
model_1_coeftest
data("Journals")
library("AER")
library("ggplot2")
library("dplyr")
library("knitr")
data("Journals")
#str(Journals)
#View(Journals)
Journals
knitr::opts_chunk$set(echo = TRUE)
data("Journals")
#str(Journals)
#View(Journals)
Journals
Journals %>% mutate(citeprice=price/citations) -> journals
#journals
summary(journals) #用來看資料特徵
#price，圖書館訂閱某期刊的價格
#citations，某期刊被引用的次數
#citeprice，期刊引用單價
# 引用單價citeprice，如何影響訂閱subs，進到一個類似x影響y，需求的概念
# -0.42是correlation
#
library(psych)
# journals %>%
#   select(citeprice,subs) %>%
#   pairs.panels()
journals
journals$subs
# 更理想的寫法，畢竟select這個函數一定有人用過，而且隸屬於兩個以上的套件
journals %>%
dplyr::select(citeprice,subs) %>% #select: extract column by name
pairs.panels()
journals %>%
dplyr::select(citeprice,subs) %>%
dplyr::mutate_all(log) %>% #取log使他較接近常態分配，OLS迴歸斜率也較清楚。
pairs.panels()
# 判斷變數是否為數值類別，先建立函數功能。
is_numeric<-function(x) all(is.numeric(x))
# 計算數數與citeprice的相關係數，先建立函數功能，那要另外建立，是因為有一個citeprice這個變數，我想要先訂下來。
cor_citeprice<-function(x) cor(x,journals$citeprice)
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_citeprice) %>% #summarise是接近敘述統計量的意思
kable() #kable讓印的表變得比較好看
#回去寫：佐證foundingyear和subs的立足點不同的佐證。correlation
library(dplyr)
cor_subs <- function(x){
cor(x,journals$subs)
}
journals %>%
select_if(is_numeric) %>%
summarise_all(cor_subs)
journals %>% select(foundingyear, subs) %>% pairs.panels()
#cor(foundingyear, subs) = -0.4073721
#cor(foundingyear, citeprice) = 0.3102098
#cor(citeprice, subs) = -0.4195314
journals %>%
lm(log(subs)~log(citeprice),data=.) #data=.意思是指若在pipe裡面，如果你要放進去的地方，不是在第一個參數的位置。那就可以點，去告訴電腦去把他放到恰當的位置。
#在R裡面，~是建構一個formula，是可以存起來的。那在實證分析上，會傾向先把迴歸式建好，比較不會一直重複打。
journals %>%
lm(log(subs)~log(citeprice)+foundingyear,data=.)
library(dplyr)
journals %>%
lm(log(subs)~log(citeprice),data=.) -> model_1
journals %>%
lm(log(subs)~log(citeprice)+foundingyear,data=.) -> model_2
model_1
model_2
library(sandwich) #for standard error(就是standard error公式的一個形態，兩端相同，只有中間不同。)
library(lmtest)
library(stargazer)
#使用vcovHC函數來計算HC1型的異質變異，這邊在古典假設成立下，variance-covariance matrix的
#（即橫斷面資料且符合隨機抽樣下，的線性迴歸模型）
#coeftest, Inference for Estimated Coefficients，那就是會用到假設檢定的公式。(beta_hat-beta)/se.。自然就需要variance-covariance matrix
coeftest(model_1, vcov. = vcovHC, type="HC1") -> model_1_coeftest
coeftest(model_2, vcov. = vcovHC, type="HC1") -> model_2_coeftest
# vcov. = vcovHC, type="HC1" 是固定的，就是因為他是橫斷面且符合隨機抽樣的類型。他的非對角線都是0，那HC1、HC2是不同的資料型態。遇到就會比較知道。
model_1_coeftest
model_2_coeftest
#進行模型比較
stargazer(model_1, model_2,
se=list(model_1_coeftest[,"Std. Error"], model_2_coeftest[,2]),
type="text",
align=TRUE)
#se 指定的standard error算法。se=list(...)不要動。
#[,"Std. Error"]和[,2]的寫法是一樣的目的。寫法不同。
#type="text" 也可以改成"html"
#align就是讓他排版就好看而已。
#查coeftest的help
#查stargazer的help
##The stargazer command produces LaTeX code, HTML code and ASCII text for well-formatted tables that hold regression analysis results from several models side-by-side. It can also output summary statistics and data frame content. stargazer supports a large number model objects from a variety of packages.
